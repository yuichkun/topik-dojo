// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResultsScreen matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      activityState={2}
      aria-hidden={false}
      collapsable={false}
      fullScreenSwipeShadowEnabled={true}
      gestureResponseDistance={
        {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      hasLargeHeader={false}
      nativeBackButtonDismissalEnabled={false}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onGestureCancel={[Function]}
      onHeaderBackButtonClicked={[Function]}
      onHeaderHeightChange={[Function]}
      onNativeDismissCancelled={[Function]}
      onSheetDetentChanged={[Function]}
      onTransitionProgress={[Function]}
      onWillAppear={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      sheetAllowedDetents={
        [
          1,
        ]
      }
      sheetCornerRadius={-1}
      sheetElevation={24}
      sheetExpandsWhenScrolledToEdge={true}
      sheetGrabberVisible={false}
      sheetInitialDetent={0}
      sheetInitialDetentIndex={0}
      sheetLargestUndimmedDetent={-1}
      sheetLargestUndimmedDetentIndex={-1}
      stackPresentation="push"
      style={
        [
          [
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            undefined,
          ],
          {
            "zIndex": undefined,
          },
        ]
      }
      swipeDirection="horizontal"
    >
      <RNSScreenContentWrapper
        collapsable={false}
        style={
          [
            {
              "flex": 1,
            },
            [
              {
                "backgroundColor": "rgb(242, 242, 242)",
              },
              undefined,
            ],
          ]
        }
      >
        <RCTSafeAreaView
          className="flex-1 bg-white"
        >
          <View
            className="flex-row items-center justify-between px-4 py-3 bg-white border-b border-gray-200"
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <Text
                className="text-blue-500 text-base"
              >
                ← 戻る
              </Text>
            </View>
            <Text
              className="text-lg font-bold text-gray-800"
            >
              1
              級 成績確認
            </Text>
            <View
              className="w-12"
            />
          </View>
          <View
            className="flex-1 justify-center items-center px-4"
          >
            <Text
              className="text-lg text-gray-600 mb-2 text-center"
            >
              まだテストを実施していません
            </Text>
            <Text
              className="text-sm text-gray-500 text-center"
            >
              テストを実施すると成績が表示されます
            </Text>
          </View>
        </RCTSafeAreaView>
      </RNSScreenContentWrapper>
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backTitleFontFamily="System"
        backTitleVisible={true}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={true}
        hideBackButton={false}
        largeTitleFontFamily="System"
        largeTitleFontWeight="700"
        largeTitleHideShadow={false}
        pointerEvents="box-none"
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "position": "absolute",
            "width": "100%",
          }
        }
        title="Results"
        titleColor="rgb(28, 28, 30)"
        titleFontFamily="System"
        titleFontWeight="600"
        topInsetEnabled={true}
        translucent={false}
      />
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
