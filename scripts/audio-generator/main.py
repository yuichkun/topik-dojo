import json
import os
from generator import generate_audio


def create_audio_mappings(word_mappings, example_mappings):
    """Create the JavaScript mapping file for audio assets"""
    mappings_path = os.path.join(
        os.path.dirname(__file__), "..", "..", "src", "assets", "audioMappings.js"
    )
    
    with open(mappings_path, "w", encoding="utf-8") as f:
        f.write("// AUTO-GENERATED FILE - DO NOT EDIT\n")
        f.write("// This file is automatically generated by scripts/audio-generator/main.py\n")
        f.write("// Last generated: " + str(os.popen('date').read().strip()) + "\n\n")
        
        # Write word audio mappings
        f.write("export const wordAudioMap = {\n")
        for korean in sorted(word_mappings):
            # Escape single quotes in the key
            escaped_korean = korean.replace("'", "\\'")
            f.write(f"  '{escaped_korean}': require('./audio/words/{korean}.mp3'),\n")
        f.write("};\n\n")
        
        # Write example audio mappings
        f.write("export const exampleAudioMap = {\n")
        for korean in sorted(example_mappings):
            # Escape single quotes in the key
            escaped_korean = korean.replace("'", "\\'")
            f.write(f"  '{escaped_korean}': require('./audio/examples/{korean}.mp3'),\n")
        f.write("};\n")
    
    print(f"Created audio mappings file: {mappings_path}")
    print(f"  - Word mappings: {len(word_mappings)}")
    print(f"  - Example mappings: {len(example_mappings)}")


def main(limit: int | None = None):
    # Read words.json
    words_path = os.path.join(
        os.path.dirname(__file__), "..", "..", "src", "assets", "words.json"
    )
    with open(words_path, "r", encoding="utf-8") as f:
        words_data = json.load(f)

    # Create output directories
    base_path = os.path.join(
        os.path.dirname(__file__), "..", "..", "src", "assets", "audio"
    )
    words_dir = os.path.join(base_path, "words")
    examples_dir = os.path.join(base_path, "examples")

    os.makedirs(words_dir, exist_ok=True)
    os.makedirs(examples_dir, exist_ok=True)

    # Track what audio files we've created
    word_mappings = set()
    example_mappings = set()

    processed_count = 0
    # Process each word
    for key, word in words_data.items():
        if limit and processed_count >= limit:
            break
        korean = word.get("korean", "")
        korean_example = word.get("korean_example_sentence", "")

        if korean:
            word_output = os.path.join(words_dir, korean)
            print(f"Generating audio for word: {korean}")
            generate_audio(korean, word_output)
            word_mappings.add(korean)

        if korean_example:
            example_output = os.path.join(examples_dir, korean)
            print(f"Generating audio for example: {korean_example}")
            generate_audio(korean_example, example_output)
            # Use the korean word as key, not the full example sentence
            example_mappings.add(korean)

        processed_count += 1
    
    # Create the audio mappings file
    create_audio_mappings(word_mappings, example_mappings)


if __name__ == "__main__":
    main(2)
